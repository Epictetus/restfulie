<style>
pre { font-size 11px; color: #666; margin-bottom: 10px; margin-top: 10px; font-family: 'Courier New', 'Courier';}
h3 { margin-top: 20px; font-size: 20px !important;}
</style>

<div id="contentWrap">
<div id="contentBeneficios">                                                                                                                                          
	<a rel="nofollow" name="what_is_rest"></a>
	<h2>Why hypermedia</h2>
	<h3>Typical SOA?</h3>

	<p>
	The following is a typical webservice xml representation using POX, and would be even bigger if it was using SOAP and the WS-* stack:
	
</p>
	<pre><%=html '<flight>
	<from>sao paulo</from>
	<to>seoul</to>
	<seats>2</seats>
	<price>1600.00</price>
</flight>'%>
	</pre>
<p>
	Any clients consuming this representation should know before hand where to make their payments to. If they want to change the amount of seats, the clients also need to know where to send the new information: all the URIs and fields are known before hand.

	There is a coupling between *all* web services that your client is going to access even before it touches the first service (our entry point).

	This means that if our service wants to delegate the payment control (or any other part) to a third party payment system, it needs to change all existing clients: the coupling that WS-* stack provides us is nasty.

	<h3>ESB?</h3>

	Using ESB's would help, while at the same time centralizing control in one place means losing the ability to run clients everywhere on the web. Systems created in 2010 which think they are not going to require clients on the web on the future will have to be updated soon: the web is already our platform.

	Knowing URIs before hand is similar to the Service Locator pattern:<br/>

	<%= image_tag "service.png", :title => "Service Locator" %><br/>
	</p>

	<h3>Hypermedia changing the picture?</h3>
<p>
			The first, but far from last, step is to add hypermedia controls to our representation. In this case, we will add some links:

			<pre>
<%=html '<flight>
	<from>sao paulo</from>
	<to>seoul</to>
	<seats>2</seats>
	<price>1600.00</price>
	<link rel="payment" href="http://myservice/flight/235/payment" />
	<link rel="self" href="http://myservice/flight/235" />
</flight>
'%>
			</pre>

			Since our client's inception, their code is already capable of navigating through those links and whenever those services point to something else, all clients will be capable of adapting themselves with no line of code changed.

			Of course, there is the need to use a common, well known, format: even better, a well known and accepted media type or micro formats.

			Using hypermedia controls to let clients navigate through your service status is to dependency injection as typical webservices (and POX) is to service locator.<br/>

			<%= image_tag "dependency.png", :title => "Dependency Injection" %><br/>

			At this point you have been convinced that hypermedia gives up lesser coupling between consumers and services than typical web services using SOAP and the WS-* stack.
			</p>
<h3>Why not URI patterns?</h3>

<p>Knowing URI patterns offers the same type of coupling to only one service provider as knowing all URIs. Opensearch is an example of URI patterns that allows service provider to teach clients so the coupling is minimized.
<br/><br/><br/><br/>
</p>
	      </div>
	  </div>
