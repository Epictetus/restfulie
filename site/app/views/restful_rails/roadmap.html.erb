
<div id="textoCapitulo">
	<h3>Already in the trunk</h3>
	<ul>
		<li>support cache header vary on the client side</li>
		<li>client already loads activesupport and action_controller</li>
		<li>created c# mailing list</li>
		<li>supporting ratom</li>
		<li>beta version of the restfulie guide released</li>
	</ul>

	<h3> Next release</h3>
	<ul>
		<li>java support to links header</li>
		<li>rails support to links header</li>
	</ul>

	<h3> Later</h3>
	<ul>
		<li>vraptor's etag for pages</li>
		<li>use InheritedResources</li>
		<li>support controller definition of transitions</li>
		<pre>
			class OrderController
			 on_transition(:pay).use(:controller => :payments, :action => :create)
			 # on_transition(:show).use(:show) not necessary: its the convention
			</pre>
		<li>support relational controls</li>
		<li>resources should have self and edit link by default, allow to remove it</li>
		<li>Rails support to Vary header due to content negotiation</li>
		<li>support opensearch</li>
		<li>support oauth</li>
		<li> remove that Order.remote_retrieve entry point stuff</li>
		<li> conditional POST and PUT</li>
		<li>â€¯ Use If-Match and an ETag for conditional post and put</li>
		<li>memcached support</li>
		<li>use http://dev.ctor.org/http-access2</li>
		<li>guess response time when its unavailable</li>
		<li>test helpers for rest applications</li>
		<li>create a rails downloadable file with restfulie+hotel</li>
		<li>www2010 and hotel's test should run automatically when running runcoderun</li>
		<li>support to_one relations</li>
		<pre>
			it "should allow access to child element with a to_one relationship" do
	      hash = {"player" => {"name" => "guilherme", "team" => {"name" => "corinthians"}}}
	      player = Player.from_hash(hash)
	      player.team.class.should == Team
	      player.team.name.should == "corinthians"
	    end
    </pre>
		<li>support item, item, item, without items while unmarshalling</li>
		<li>support oauth</li>
	  <li># roadmap: support no-cache</li>
	  <li># roadmap: support Expires</li>
	  <li># roadmap: support must-revalidate with heuristics</li>
		<li>collections should have relation links by default</li>
		<li>support and example for item.links[:self] on atom</li>
		<li>better dsl for transition and relations when acting asrestfulie</li>
		<li>extended ActiveRecord support with has_many, has_one, belongs_to</li>
		<li>HEAD support</li>
		<li>use public hashi instead of jeokkarak? due to inspect features</li>
		<li>apply license+copyright to all files (c#)</li>
		<li>support link headers</li>
		<li>http://tech.dir.groups.yahoo.com/group/rest-discuss/message/14035</li>
		<li>receive metrics more ....????</li>
		<li>refactor media type support in 2 parts: encoding, decoding</li>
		<li>Features should have standard doc names so pages are the same for all languages</li>
		<li>videocast</li>
		<li>allow users to pick other xml providers</li>
		<li>Restfulie.at should have an alias Resource.at for better dsling</li>
		<li> support link to external resources:</li>
		<pre>class Album
		  has_many :songs
		  composite_resource :songs
		end</pre>
		<li>will serialize all songs with it using its URI</li>
	<pre>class Album
	  has_many :songs
	  composite_resource :songs, :uri => :uri
	end</pre>
	will serialize all songs as relations with their own uri
	<pre>class Album
	  has_many :songs
	  composite_resource :songs do |song|
	    song.to_xml(...)
	  end
	end</pre>
	will serialize all songs with it using its URI
	<li>RSS support</li>
<li> support PUT create and update</li>
<li> support multiple status state machine</li>
	<pre>class Order
	  status :approval
	  status :processing
	end</pre>
	<li> rails 3 easier support (no controller argument!)</li>
	<li> BUG: atom last_updated date should be in format 2009-07-01T12:05:00Z</li>
	<li> 406 should send a xhtml representation with extra options</li>
	<li> support PATCH verb</li>
	<li> integration tests automatic</li>
	<li> allow if with a proc while defining a transition</li>
	<li> support EntryPoints.create Order do |order| '' end</li>
	<li> support aasm and change parameter order for transition: (i.e. last one is HASH, first is name, second (if existing) is target state)</li>
	<li> restfulie-vraptor support last-modified and etag</li>
	<li> controller filtering based on status</li>
	<li> rails 411 check</li>
	<li> rel prepend suffix as http://iansrobinson.com/resources/link-relations/preceding</li>
	<li> automatically generate uri for this rel with its transition description</li>
	<li> support 302 and 303</li>
	<li> allows pure String/byte array client side post and server side retrieval</li>
	<li> controller method should check if its an restfulie resource</li>
	<li> pure href definition of link</li>
	<li> allow servers to define a state method instead of internal variable</li>
	<li> when receiving a 201 + content, it should believe the content</li>
	<li> client side should allow withAuth</li>
	<li>render_resource should receive a block to register extra handlers</li>
	<li> server and client side 303 support on alternate uri (or content-location)</li>
	<li>support memcached</li>
	</ul>
</div>